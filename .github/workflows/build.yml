name: 构建apk

on:
  workflow_dispatch:

jobs:
  build:
    name: "构建apk"
    runs-on: ubuntu-latest
    steps:
    - name: 1 安装依赖
      run: |
        sudo apt update && sudo apt install -y libarchive-tools wget ninja-build
    - name: 2 克隆仓库
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: 3 gradle验证
      uses: gradle/wrapper-validation-action@v2
      
    - name: 4 java配置
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 5 恢复缓存
      uses: actions/cache@v4
      with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

          restore-keys: |
            ${{ runner.os }}-gradle-

    - name: 6 设置cassiaext.cfg
      run: |
        git clone --recurse-submodules https://github.com/cassia-org/cassiaext
        cd cassiaext
        
        printf "$(pwd)/cassiaext\n\
        cmake -GNinja -Bbuild -H. \
        -DCMAKE_TOOLCHAIN_FILE=\${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake \
        -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-29 \
        -DANDROID_SDK=\${ANDROID_SDK_HOME} -DANDROID_NDK=\${ANDROID_NDK_HOME} \
        -DANDROID_ABIS=arm64-v8a" \
        > app/cassiaext.cfg
        cat app/cassiaext.cfg
      #python3 cassiaext/deps/apply-patches.py
    - name: 7. 构建
      run: chmod +x ./gradlew && ./gradlew assembleDebug
    
    - name: 8. 上传apk到action
      uses: actions/upload-artifact@v4
      with:
        name: apk-debug
        path: ./app/build/outputs/apk/debug
    
